name: Build ExternalLibrary

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

jobs:
  x86_64-windows:
    runs-on: windows-2022
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - run: cmake . -G "Visual Studio 17 2022" -Bcpp_build
    - run: cmake --build cpp_build --config Release
    - run: cpp_build\Release\ExternalLibraryTest.exe
    - run: |
        $python_home = "${{ env.Python_ROOT_DIR }}" -replace "\\", "/"
        cmake . -G "Visual Studio 17 2022" -Bpython_build -DEXTERNAL_LANGUAGE=Python -DPYTHON_HOME="$python_home"
    - run: cmake --build python_build --config Release
    - run: python -m pip install -e Python
    - run: |
        set
        set PYTHONHOME="${{ env.Python_ROOT_DIR }}""
        set PATH="${{ env.Python_ROOT_DIR }};%PATH%"
        set
        python_build\Release\ExternalLibraryTest.exe
  x86_64-linux:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v3
    - run: cmake . -Bcpp_build
    - run: cmake --build cpp_build
    - run: ./cpp_build/ExternalLibraryTest
  aarch64-linux:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v3
    - run: sudo apt install gcc-aarch64-linux-gnu g++-aarch64-linux-gnu qemu-user
    - run: cmake . -D CMAKE_C_COMPILER=/usr/bin/aarch64-linux-gnu-gcc -D CMAKE_CXX_COMPILER=/usr/bin/aarch64-linux-gnu-g++ -B cpp_build
    - run: cmake --build cpp_build
    - run: qemu-aarch64 -L /usr/aarch64-linux-gnu ./cpp_build/ExternalLibraryTest
